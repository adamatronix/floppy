{"mappings":"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","sources":["src/index.ts","src/FloppyStage.ts","src/AnimationTypes.ts","src/utils/findPointBetweenTwo.ts","src/FloppyObject.ts","src/utils/loadTextures.ts"],"sourcesContent":["import FloppyStage from './FloppyStage';\nimport FloppyObject from './FloppyObject';\nimport loadTextures from './utils/loadTextures';\n\nexport {\n  FloppyStage,\n  FloppyObject,\n  loadTextures\n}","import * as THREE from 'three';\nimport { gsap } from \"gsap\";\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport FloppyObject from './FloppyObject';\nimport { AnimationTypes } from './AnimationTypes';\n\ninterface Origin {\n  x: number;\n  y: number;\n}\n\ninterface LooseObject {\n  [key: string]: any\n}\n\nclass FloppyStage {\n  options: LooseObject;\n  scene: THREE.Scene;\n  camera: THREE.PerspectiveCamera;\n  sphere: THREE.Mesh;\n  renderer: THREE.WebGLRenderer;\n  container: HTMLDivElement;\n  origin: Origin;\n  cachedMouse: Origin;\n  mouseVector: any;\n  floppy: any;\n  texture:string;\n  dimensions:any;\n  stats:Stats;\n  requestId:number;\n  punctured:boolean = false;\n  intersectionObserver:IntersectionObserver;\n\n  constructor(el: HTMLDivElement, floppy: FloppyObject, options?: LooseObject) {\n    this.container = el;\n    this.floppy = floppy;\n    this.options = {\n      ground: true,\n      background: true,\n      trailEffect: false,\n      tickerColour: '#FFF',\n      elastic: false,\n      stats: false,\n      puncturable: false,\n      slaveMode: false,\n      manual: false,\n      animation: 'pivotRotate'\n\n    }\n\n    this.options = { ...this.options, ...options};\n    this.stats = this.options.stats ? this.setupStats() : null;\n    this.setupEvents();\n\n    if(this.options.slaveMode) {\n      this.setupScene();\n    } else {\n      this.setupWorld();\n      this.setupObserver();\n    }\n  }\n\n  setupEvents = () => {\n    if(!this.options.manual)\n      document.body.addEventListener(\"mousemove\", this.onMouseMove);\n\n    window.addEventListener(\"scroll\", this.onScroll);\n  }\n\n  setupObserver = () => {\n    this.intersectionObserver = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          this.startRender();\n        } else {\n          this.stopRender();\n        }\n      });     \n   });\n\n   this.intersectionObserver.observe(this.container);\n  }\n\n  setupStats = () => {\n    const stats = Stats();\n    stats.setMode(0);\n\n    stats.domElement.style.position = 'absolute';\n    stats.domElement.style.left = '0';\n    stats.domElement.style.top = '0';\n    this.container.appendChild(stats.domElement);\n\n    return stats;\n  }\n\n  setupScene = () => {\n    const bounding = this.container.getBoundingClientRect();\n    this.origin = { x: bounding.x + this.container.offsetWidth/2, y: bounding.y + this.container.offsetHeight/2 };\n\n    this.scene = new THREE.Scene();\n    this.scene.userData.element = this.container;\n    const fov = 45;\n    const aspect = 2;  // the canvas default\n    const near = 0.1;\n    const far = 500;\n    this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    this.camera.position.set(0, 30, 0);\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    this.camera.aspect = this.container.offsetWidth / this.container.offsetHeight;\n\t\tthis.camera.updateProjectionMatrix();\n\n    const ambient = new THREE.AmbientLight( 0xcccccc );\n\t  this.scene.add( ambient );\n\n    const light = new THREE.PointLight( 0xffffff, 0.2);\n    light.castShadow = true;\n    light.shadow.camera.near = 0.1;\n    light.shadow.camera.far = 3000;\n    light.shadow.mapSize.width = 2024;\n    light.shadow.mapSize.height = 2024;\n    // move the light back and up a bit\n    light.position.set( -10, 20, -10 );\n    this.scene.add(light);\n\n    /*this.floppy = new FloppyObject(this.dimensions, this.texture, this.options.tickerColour, this.options.tickerTextureH, this.options.tickerTextureV);\n    this.scene.add(this.floppy.mesh);*/\n  }\n\n  setupWorld = () => {\n    const bounding = this.container.getBoundingClientRect();\n    this.origin = { x: bounding.x + this.container.offsetWidth/2, y: bounding.y + this.container.offsetHeight/2 };\n\n    this.scene = new THREE.Scene();\n\n    const planeGeometry = new THREE.PlaneGeometry( 500, 500 );\n    const planeMaterial = new THREE.MeshPhongMaterial( { color: 0xffffff } );\n\n\n    if (this.options.ground) {\n      const ground = new THREE.Mesh( planeGeometry, planeMaterial );\n\n      ground.position.set( 0, 0, 0);\n      ground.rotation.x = Math.PI * -.5;\n\n      ground.castShadow = false;\n      ground.receiveShadow = true;\n\n      this.scene.add( ground );\n    }\n    \n\n    const fov = 45;\n    const aspect = this.container.offsetWidth / this.container.offsetHeight;  // the canvas default\n    const near = 0.1;\n    const far = 500;\n    this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    this.camera.position.set(0, 100, 0);\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\t\tthis.camera.updateProjectionMatrix();\n\n    const ambient = new THREE.AmbientLight( 0xcccccc );\n\t  this.scene.add( ambient );\n\n    const light = new THREE.PointLight( 0xffffff, 0.2);\n    light.castShadow = true;\n    light.shadow.camera.near = 0.1;\n    light.shadow.camera.far = 3000;\n    light.shadow.mapSize.width = 2024;\n    light.shadow.mapSize.height = 2024;\n    // move the light back and up a bit\n    light.position.set( -10, 20, -10 );\n    this.scene.add(light);\n    this.scene.add(this.floppy.mesh);\n\n    /*this.floppy = new FloppyAlbum(this.texture, (mesh: THREE.Group) => {\n      this.scene.add(mesh);\n    });*/\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: !this.options.background, preserveDrawingBuffer: this.options.trailEffect ? true : false});\n    this.renderer.setClearColor( 0x000000, 0 );\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFShadowMap;\n    this.renderer.autoClear = this.options.trailEffect ? false : true;\n    this.renderer.clear();\n    this.renderer.setPixelRatio( window.devicePixelRatio );\n    this.renderer.setSize( this.container.offsetWidth, this.container.offsetHeight );\n    this.container.appendChild( this.renderer.domElement );\n  }\n\n  renderFrame = () => {\n    this.requestId = requestAnimationFrame(this.renderFrame);\n    this.renderer.clear(this.options.trailEffect ? false : true);\n    this.floppy.needsUpdate();\n    this.renderer.render( this.scene, this.camera );\n    this.stats ? this.stats.update() : null;\n  }\n\n  stopRender = () => {\n    cancelAnimationFrame(this.requestId);\n    this.requestId = undefined;\n    this.floppy.stopRender();\n    this.destroyEvents();\n  }\n\n  startRender = () => {\n    this.renderFrame();\n    this.floppy.startRender();\n    this.setupEvents();\n  }\n\n  onScroll = () => {\n    const bounding = this.container.getBoundingClientRect();\n    this.origin = { x: bounding.x + this.container.offsetWidth/2, y: bounding.y + this.container.offsetHeight/2 };    \n  }\n\n  /**\n   * On mouse move trigger a tween to the current mouse position.\n   * \n   * @param {object} e Mouse event \n   */ \n   onMouseMove = (e: MouseEvent) => {\n    const x = e.clientX;\n    const y = e.clientY;\n    this.cachedMouse = { x:x, y:y };\n    this.mouseVector = this.getNormalizedMouseVector(e);\n    AnimationTypes(this.floppy,this.mouseVector.x,this.mouseVector.z, this.options.animation);\n\n  }\n\n  getNormalizedMouseVector = (e: MouseEvent) => {\n    let mouse:LooseObject = {};\n\n    mouse.x = (e.clientX / window.innerWidth) * 2 - 1;\n    mouse.y = - (e.clientY / window.innerHeight) * 2 + 1;\n\n    // Make the sphere follow the mouse\n    var vector = new THREE.Vector3(mouse.x, mouse.y, 0.5);\n    vector.unproject( this.camera );\n    \n    var dir = vector.sub( this.camera.position ).normalize();\n    var distance = - this.camera.position.y / dir.y;\n    return this.camera.position.clone().add( dir.multiplyScalar( distance ) );\n  }\n\n  destroyEvents = () => {\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    window.removeEventListener(\"scroll\", this.onScroll);\n  }\n\n  destroy = () => {\n    this.container.innerHTML = '';\n    this.destroyEvents();\n  }\n\n}\n\nexport default FloppyStage;","import { gsap } from \"gsap\";\nimport FloppyObject from './FloppyObject';\nimport { findPointBetweenTwo } from './utils/findPointBetweenTwo';\nimport { distanceOfLine } from './utils/distanceOfLine';\n\n\nexport const AnimationTypes = (floppy:FloppyObject, x:number, y:number, type:string) => {\n\n  const types:any = {\n    pivotRotate: (floppy:FloppyObject, x:number, y:number) => {\n\n      const distance = findPointBetweenTwo(0.1,0,0,x,y);\n      gsap.to(floppy.mesh.position, \n        { \n          duration: 2,\n          z: distance.y,\n          x: distance.x\n        }\n      );\n      \n     \n      \n      if(-10 < x && x < 10) {\n        let range = 10 - (-10);\n        let adjustedX = x + 10;\n        let percent = adjustedX / range;\n        let movement = percent * 1.5;\n      \n          gsap.to(floppy.mesh.rotation, \n            { \n              duration: .8,\n              y:  0.75 - movement,\n            }\n          );\n       }\n\n       if(-20 < y && y < 20) {\n        let range = 20 - (-20);\n        let adjustedY = y + 20;\n        let percent = adjustedY / range;\n        let movement = percent * 1.5;\n      \n          gsap.to(floppy.mesh.rotation, \n            { \n              duration: .8,\n              x: ((Math.PI * .5) - 0.75) + movement\n            }\n          );\n       }\n    },\n\n    followTilt: (floppy:FloppyObject, x:number, y:number) => {\n      // Go to where the cursor is.\n      gsap.to(floppy.mesh.position, \n        { \n          duration: 1,\n          z: y,\n          x: x,\n          onUpdate: () => {\n            \n            const distanceX = Math.floor(x) - Math.floor(floppy.mesh.position.x);\n            const distanceY = Math.floor(y) - Math.floor(floppy.mesh.position.z);\n      \n            let percentX = distanceX / 40;\n            let percentY = distanceY / 40;\n            let movementX = percentX * -1.5;\n            let movementY = percentY * 1.5;\n\n            gsap.to(floppy.mesh.rotation, \n              { \n                ease: \"power2.out\",\n                duration: .8,\n                y: movementX,\n                x: ((Math.PI * .5)) + movementY\n              }\n            );\n          },\n          onComplete: () => {\n\n          }\n        }\n      );\n    }\n  }\n  \n  types[type](floppy,x,y);\n}\n\nexport default AnimationTypes;","export const findPointBetweenTwo = (percent:number, x1:number, y1:number, x2:number, y2:number) => {\n  return {\n    x: x1 + (x2 - x1) * percent,\n    y: y1 + (y2 - y1) * percent\n  }\n}\n\nexport default findPointBetweenTwo;","import * as THREE from 'three';\nimport { gsap } from \"gsap\";\n\ninterface LooseObject {\n  [key: string]: any\n}\n\nclass FloppyObject { \n  mesh: THREE.Mesh;\n  image: any;\n\n  constructor(boxDimensions: LooseObject, image: any) {\n    this.image = image;\n    this.createShape(boxDimensions,image);\n  }\n\n  buildMaterial = (asset:any, callback: any) => {\n    let cubeMaterialArray;\n    if(asset instanceof THREE.Texture) {\n      cubeMaterialArray = this.getMaterialArray(asset);\n      if(callback)\n        callback(cubeMaterialArray);\n    } else {\n      new THREE.TextureLoader().load(asset, (texture) => {\n\n        cubeMaterialArray = this.getMaterialArray(texture);\n        if(callback)\n          callback(cubeMaterialArray);\n      });    \n    }\n\n    \n  }\n\n  getMaterialArray = (texture:THREE.Texture) => {\n    // Create an array of materials to be used in a cube, one for each side\n    const cubeMaterialArray = [];\n      \n    // order to add materials: x+,x-,y+,y-,z+,z-\n    cubeMaterialArray.push( new THREE.MeshPhongMaterial( { color: 0xFFFFFF  } ) );\n    cubeMaterialArray.push( new THREE.MeshPhongMaterial( { color: 0xFFFFFF  } ) );\n    cubeMaterialArray.push( new THREE.MeshPhongMaterial( { color: 0xFFFFFF  } ) );\n    cubeMaterialArray.push( new THREE.MeshPhongMaterial( { color: 0xFFFFFF  } ) );\n    cubeMaterialArray.push( new THREE.MeshPhongMaterial( { color: 0xFFFFFF } ) );\n    cubeMaterialArray.push( new THREE.MeshPhongMaterial( { map: texture, transparent: true  } ) );\n\n    return cubeMaterialArray;\n  }\n\n  updateMaterial = (image: any, width: number, height: number) => {\n    this.image = image;\n\n    const ratio = height / width;\n    this.buildMaterial(image, (mat:any)=> {\n      this.mesh.material = mat;\n      this.mesh.scale.y = this.mesh.scale.x * ratio;\n    });\n  }\n\n  createShape = (boxDimensions: LooseObject, image:any) => {\n\n    const cubeGeo = new THREE.BoxGeometry(boxDimensions.x, boxDimensions.y, boxDimensions.z);\n    this.mesh = new THREE.Mesh(cubeGeo, null);\n    this.mesh.position.set(0, 0, 0);\n\n    this.mesh.rotation.x = Math.PI * .5;\n    this.mesh.rotation.z = Math.PI * 1;\n\n    this.buildMaterial(image, (mat:any)=> {\n      this.mesh.material = mat;\n    });\n    \n    \n  }\n\n  startRender = () => {\n    // put rendering stuff here\n  }\n\n  stopRender = () => {\n    // put stop rendering stuff here\n  }\n\n  needsUpdate = () => {\n\n  }\n}\n\nexport default FloppyObject;","import * as THREE from 'three';\n\nexport const loadTextures = (files:any) => {\n  const promiseArray:any = [];\n  const loader = new THREE.TextureLoader();\n\n  files.forEach((file:any)=> {\n\n    const imgPromise = new Promise((resolve,reject) => {\n      loader.load(\n        file.img, (texture) => {\n          resolve( texture )\n        }\n      )\n    })\n\n    promiseArray.push(imgPromise);\n  })\n\n  return promiseArray;\n}\n\nexport default loadTextures;"],"names":[],"version":3,"file":"module.js.map"}